수정 사항 설명 
- 클라이언트 세션 요청 -> 자리 개념으로 요청을 캡슐화해서 게임룸에 넣어두고 나중에 처리 
(락을 최소화 하는 방법) 

- 람다 캡처 방식 설명
=> 바로 Action을 실행하지 않을 수도 있기에 어떻게 될지 모름, 혼동 여지 높음, 실수 확률 높음 

캡슐화 방식을 사용할 것 
 
 
Job 폴더와 Cs클래스 생성 

Job cs 에서 IJbob을 생성해 상속받는 4개의 클래스 생성 
인자들을 하나씩 늘려 없는거부터 3개까지 생성 

하드코딩인가? 
-> No 실제 Action도 이런식으로 구현되어있음. 만들어두면 매번 이렇게 만들지 않기 때문


잡을 모아서 실행시켜줄 Cs파일 생성 
JobSerializer.cs
JobQueue파일에 내용 가져온 뒤 삭제 
Action으로 람다캡쳐를 사용하던 부분 Ijob 으로 수정 
Invoke 대신 Excute 사용 


무한대기상태로 안만들고 동시에 접근만 불가능하게 함 
